#!/bin/bash

git_create_work_branch_main(){
  local parent_remote
  local pub_remote
  local default_branch
  local message

  git_create_work_branch_parse_options "$@"

  local parent_branch
  local pub_branch
  local is_create_new_pull_request

  git_create_work_branch_set_pub_branch
  git_create_work_branch_check_pub_merged

  if [ -n "${is_create_new_pull_request}" ]; then
    git_create_work_branch_new_pull_request
  else
    git_create_work_branch_push_to_pub
  fi
}
git_create_work_branch_parse_options(){
  parent_remote=origin
  pub_remote=pub
  default_branch=master

  message=$1; shift

  if [ -z "$message" ]; then
    git_create_work_branch_error usage
  fi
}

git_create_work_branch_set_pub_branch(){
  local current_branch
  current_branch=$(git symbolic-ref --short HEAD)

  # create new pull request if current branch is master
  if [ "${current_branch}" = "${default_branch}" ]; then
    is_create_new_pull_request=true
  fi

  # create new pull request if current branch is origin's branch
  if [ -n "$(git branch -r --list "${parent_remote}/${current_branch}")" ]; then
    is_create_new_pull_request=true
  fi

  if [ -n "${is_create_new_pull_request}" ]; then
    pub_branch=$(echo "${message}" | head -1 | sed -e "s/[^[:alnum:]]\+/-/g")
    parent_branch=${current_branch}
  else
    pub_branch=${current_branch}
    parent_branch=$(git parent)
  fi
}
git_create_work_branch_check_pub_merged(){
  if [ -z "$(git branch -r --list "${pub_remote}/${pub_branch}")" ]; then
    return
  fi

  if [ -z "$(git log "${parent_remote}/${parent_branch}..${pub_remote}/${pub_branch}")" ]; then
    git_create_work_branch_error pub_is_already_merged
  fi
}

git_create_work_branch_new_pull_request(){
  git checkout -b "${pub_branch}"
  git_create_work_branch_push_to_pub &&
  git post "${message}" "${parent_branch}" &&
  :
}
git_create_work_branch_push_to_pub(){
  git commit --allow-empty -m "${message}" &&
  git push "${pub_remote}" "${pub_branch}" &&
  :
}

git_create_work_branch_error(){
  git_create_work_branch_error_message_$1 >&2
  exit 1
}

git_create_work_branch_error_message_usage(){
  echo 'usage: git create-work-branch <commit message>'
}
git_create_work_branch_error_message_pub_is_already_merged(){
  echo "${pub_remote}/${pub_branch} is already merged into ${parent_remote}/${parent_branch}"
  echo "aborted."
}

git_create_work_branch_main "$@"
