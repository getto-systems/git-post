#!/bin/bash

git_post_bitbucket(){
	local data
	local config_client_id
	local config_secret
	local config_refresh
	local client_id
	local secret
	local code
	local refresh_token
	local access_token
	local token

	config_client_id=$config-client_id
	config_secret=$config-secret
	config_refresh=$config-refresh

	git_post_bitbucket_get_client_id
	git_post_bitbucket_get_secret

	data='{"title": "'$title'", "description": "'$description'", "destination": {"branch": {"name": "'$parent'"}}, "source": {"branch": {"name": "'$current'"}, "repository": {"full_name": "'${user_name}/${repository}'"}}}'

	git_post_bitbucket_get_token
	git_post_bitbucket_request
}
git_post_bitbucket_request(){
	local result
	result=$(curl -i -s -H "Authorization: Bearer $token" -H "Content-Type: application/json" -X POST https://api.bitbucket.org/2.0/repositories/${destination}/pullrequests/ -d "$data")

	if [ -n "$(echo "$result" | grep "201 CREATED")" ]; then
		echo done
	else
		if [ -n "$(echo "$result" | grep "401 UNAUTHORIZED")" ]; then
			git_post_bitbucket_get_token
			git_post_bitbucket_request
		else
			echo "$result" | head -1
			echo "$result" | grep '"message":' | sed 's/"message": "\(.*\)",\?$/\1/'
		fi
	fi
}
git_post_bitbucket_get_token(){
	if [ -f $config_refresh ]; then
		refresh_token=$(cat $config_refresh)
		git_post_bitbucket_refresh_token
		if [ -n "$token" ]; then
			return
		fi
	fi

	echo
	echo "access url, and copy code"
	echo
	echo "https://bitbucket.org/site/oauth2/authorize?client_id=$client_id&response_type=code"
	echo
	read -sp "paste code: " code
	echo
	access_token=$(curl -s -X POST -u "${client_id}:${secret}" https://bitbucket.org/site/oauth2/access_token -d grant_type=authorization_code -d code=$code)
	git_post_bitbucket_parse_access_token
}
git_post_bitbucket_refresh_token(){
	access_token=$(curl -s -X POST -u "${client_id}:${secret}" https://bitbucket.org/site/oauth2/access_token -d grant_type=refresh_token -d refresh_token=$refresh_token)
	git_post_bitbucket_parse_access_token
}
git_post_bitbucket_parse_access_token(){
	case "$access_token" in
		*access_token*)
			token=$(echo "$access_token" | sed 's/.*\("access_token": "\([^"]*\)"\).*/\2/')
			;;
	esac
	case "$access_token" in
		*refresh_token*)
			refresh_token=$(echo "$access_token" | sed 's/.*\("refresh_token": "\([^"]*\)"\).*/\2/')
			;;
	esac

	if [ -n "$refresh_token" ]; then
		echo $refresh_token > $config_refresh && chmod 600 $config_refresh
	fi
}
git_post_bitbucket_get_client_id(){
	if [ -f $config_client_id ]; then
		client_id=$(cat $config_client_id)
	else
		read -sp "consumer client_id for [$user_name]: " client_id
		echo
		echo $client_id > $config_client_id && chmod 600 $config_client_id
	fi
}
git_post_bitbucket_get_secret(){
	if [ -f $config_secret ]; then
		secret=$(cat $config_secret)
	else
		read -sp "consumer secret: " secret
		echo
		echo $secret > $config_secret && chmod 600 $config_secret
	fi
}
